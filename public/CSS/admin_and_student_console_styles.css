/*
Jr. Tech Innovation Center (JTIC): ADMINISTRATOR AND STUDENT "CONSOLE" RULES CSS
Copyright (C) 2018 Matthew Aguiar

  Jr. Tech's Mission:
  Jr. Tech is a non-profit STEM organization and its mission is to provide young, 4th - 12th grade students,
  with an opportunity to begin building their Science, Technology, Engineering and Mathematical skills for future success
  in STEM related fields. Some of Jr. Tech's technological classes include, "Introduction to Computer Game Programming and Development with GameMaker-Studio 1.4",
  "Introduction to Computer Programming and Algorithms with Python", "Introduction to C++ Game Programming" and even "Introduction to Artificial Intelligence".

  What is JTIC?
  JTIC is a website that serves to help Jr. Tech STEM students innovate, create and save their work for later access from anywhere.
  It also gives computer game programming and development students a chance to publish their games on their own webpages to play from anywhere and show their friends.
*/
/*NOTE: ALL STYLING RULES ON THIS PAGE ARE FOR BOTH THE STUDENT PORTFOLIO AND THE ADMIN PAGE!*/
/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ WELCOME MESSAGE RULES --------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- Position the welcome message in the center of the page and style it with a nice border on the top and bottom of the text.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
h2#welcome-message{
  /*
  Take the welcome message at the top of the main console for both students and administrators and center it, set its height and position.
  This has a position of "relative" because we want to center the actual span(absolute positioning) containing the welcome message. NOTE: Remember that h2 headers are styled in "global_styles.css".
  */
  font-size: 26px;
  text-align: center;
  height: 38px;
  position: relative;
}

h2#welcome-message > span{
  /*Make the welcome message have a top and bottom dark grey border and center it with in the block h2 HTML element.*/
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%);
  padding: 6px 0px;
  border-top: 1.1px solid rgb(71, 71, 71);
  border-bottom: 1.1px solid rgb(71, 71, 71);
}
/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ MAIN CONSOLE RULES -----------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- Make the main "console" a flex box to properly space out any sub-consoles.
- Seperate any sub-consoles with a vertical line.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
div#console{
  /*
  Each student portfollio will contain a main console underneath the welcome message. This is one large "div" container.\
  Make it a flex box to space out any sub-consoles / containers.
  */
  display: flex;
  justify-content: space-around;
}

hr#vertical-spacer{
  /*Style a vertical line that seperates the subconsles within the main console.*/
  width: 0.8px;
  height: inherit;
  background-color: rgb(71, 71, 71);
  border: none;
  margin: 0px 0px;
}

/* ----- GENERAL SCROLLBAR RULES --------------------------------------------------------------------------------------------------------------------------------------------------------------*/
div#console *::-webkit-scrollbar{
  width: 8px;
}

div#console *::-webkit-scrollbar-button{
  margin-top: 1px;
}

div#console *::-webkit-scrollbar-thumb{
  background-color: rgb(185, 185, 185);
}

div#console *::-webkit-scrollbar-thumb:hover{
  background-color: rgb(150, 150, 150);
}

div#console *::-webkit-scrollbar-track{
  background-color: rgba(225, 225, 225, 0.75);
}
/*
CLICKBOXES TODO: REORGANIZE!

*/
li.folder-item > div.data-box-info{
  /*
  This positions the data held inside student project and game boxes such as the project's/game's tile, upload date or views.
  Specifically, it positions the data at the top of the project/game box and spaces it from the image.
  */
  display: inline-block;
  vertical-align: top;
  margin-left: 4px;
}

a.download-project{
  text-decoration: none;
}
/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ SUB-CONSOLE RULES ------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- Define dimensions of a sub-console.
- Then fit a content container inside of the "section.sub-console" container.
- Finally, reposition a inner liner to space all content from the walls of the sub-console.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
section.sub-console{
  /*
  NOTE: Each sub-console will be a section for semantic reasons. When a visually impaired person were to visit the page for example,
  the screen reader can read the header first, then go to the h2 welcome message and then go straight to each sub console. Making the larger
  parent console a section would not make much sense because the "div.console" is solely meant to group the "content containing" sub-consoles
  in a flex box for styling purposes.

  Sub-consoles will have a smaller width and the same height as the main console. They will have some spacing from the h2#welcome-message on the top.
  */
  width: 575px;
  height: inherit;
  margin-top: 12px;
}

div.sub-console-content{
  /*This rule takes the content inside of a sub-console and fits to the width of the sub-console, puts a dark border around it and makes it scroll.*/
  width: auto;
  height: 483px;
  border: 1px solid rgb(71, 71, 71);
  border-radius: 5px;
  overflow: scroll;
}

div.sub-console-content-inner-liner{
  /*Takes a sub-console-content and shrinks and centers it in the sub-console-content div container to provide some spacing from the border.*/
  width: 90%;
  height: 97%;
  margin: 15px auto 0px auto;
}

ul#themes-list{
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

li.theme{
  position: relative;
  width: 100px;
  height: 70px;
  margin-top: 15px;
}

li.theme:hover{
  cursor: pointer;
}

div.overlay{
  height: 100%;
}

img#preview-theme, img.theme-image, div.expanded-theme-container-relative-content{
  width: 100%;
  height: 100%;
}

div.large-theme-preview{
  top: 0px;
  left: 0px;
  position: absolute;
  transition: top 750ms ease, left 750ms ease, width 750ms ease, height 750ms ease, transform 750ms ease;
  z-index: 20;
}

div#expanded-theme-relative-position{
  position: relative;
  transition: width 750ms ease, height 750ms ease;
}

button.theme-remove{
  position: absolute;
  bottom: 0px;
  right: 0px;
  z-index: 20;
  visibility: hidden;
  box-shadow: none;
}

div#window-overlay{
  /*NOTE: SAME AS HELP-GUIDE-BOX :( )*/
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0.4;
  background-color: transparent;
  transition: background-color 250ms linear;
  z-index: 15;
}

/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ FORM RULES -------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- These rules are based on taking smaller sub-fieldsets within larger forms and positioning and margining them in a way that presents the info centered and organized neatly within the large form.
- Make each sub-fieldset's caption BOLD to indicate seaperate sections of input fields within forms!
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
fieldset.shrink-and-center-SUB-fieldset{
  /*
  Shrink and center all mini-fieldsets that may be within a larger master form.
  These are for further seperating and sub-dividing information within forms.
  */
  width: 90%;
  height: auto;
  margin: 17px auto 0px auto;
}

div.SUB-fieldset-content{
  /*Inside of each sub-fieldset, once again, shrink and center the content within.*/
  width: 90%;
  height: auto;
  margin: 15px auto 0px auto;
}

input.rgb-input-resize{
  font-size: 9pt;
  vertical-align: middle;
}
/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ UNORDERED LIST RULES ---------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- Organize each list item within a larger list of folders.
- Generalized for re-use in student admin and any other future pages.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
button.add-new{
  /*Make the size of all font in buttons that add lists and list items 16 pixels.*/
  font-size: 16px;
}

.remove{
  font-size: 16px;
  transition: color 100ms linear, background-color 100ms linear;
}

button.remove{
  color: red;
  background-color: rgb(253, 253, 253);
}

button.remove:hover{
  background-color: red;
  color: white;
}

button.remove:active{
  background-color: rgb(220, 0, 0);
}

button.remove.remove-expanded{
  position: absolute;
  border-radius: 50%;
  color: rgb(200, 200, 200);
  background-color: rgb(71, 71, 71);
  font-weight: bold;
  z-index: 25;
}

button.remove.remove-expanded:hover{
  cursor: pointer;
  color: rgb(71, 71, 71);
  background-color: rgb(200, 200, 200);
}

button.remove.remove-expanded:active{
  background-color: rgb(180, 180, 180);
}

ul#master-game-list{
  margin-bottom: 20px;
}

hr.folder-divider{
  height: 1px;
  background-color: rgb(96, 96, 96);
  border: none;
  margin: 0px;
}

h4.folder-arrow > img.root-folder-selector-image{
  /*Just resize the images in each folder selector. This may may for GameMaker, Python or C++ for example. Then make the icon centered vertically with the rest of the text.*/
  width: 3.5%;
  height: auto;
  vertical-align: bottom;
  margin-right: 5px;
}

h4.folder-arrow > span.expand-arrow{
  display: inline-block;
  transition: transform 750ms ease;
}

h4.folder-arrow > span.expand-arrow.compressed{
  transform: rotate(0deg);
}

h4.folder-arrow > span.expand-arrow.expanded{
  transform: rotate(90deg);
}

ul.list-content{
  /*Make the list containing each box item smaller and centered within the "master list" of root folders.*/
  margin-top: 15px;
}

ul.list-content > *{
  width: 92%;
  margin: 0px auto;
}

li.folder-item{
  /*
  Each folder list item will act as a container for student projects and HTML 5 games. The reason why the background-color is transitioned is that each time
  a user hovers over a box, the box will highlight in a slightly darker shade of tan.
  */
  transition: background-color 100ms linear;
  padding: 6px 0px;
  border-bottom: 1px solid rgba(106, 106, 106, 0.6);
}

div.main-content{
  position: relative;
}

img.project-thumbnail{
  /*Make the image icon inside of student boxes small and space them from the left of the box.*/
  width: 9%;
  height: auto;
  margin-left: 10px;
}

div.data-box-info{
  display: inline-block;
  vertical-align: top;
  margin-left: 5px;
}

div.data-box-info > h6.data-box-text-format, li.student-project > h6.data-box-text-format{
  /*Adjust the font size and margining of each piece of data within the project/game box.*/
  font-size: 12px;
  margin-bottom: 4px;
}

.hover-shade-dark-tan:hover{
  /*When each student project box is hovered over, change the background to a darker tan.*/
  background-color: rgb(255, 248, 210);
}
/*
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------ FILE MANIPULATION BUTTON RULES -----------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
REVIEW: All styling rules below do the following:
- Set some general parameters around fitting file manipulation buttons to their content with setting display as "inline-block".
- Also give the buttons some padding around the inner content.
- Finally, position the file upload and download buttons respecitvely in their own containers.
NOTE: FILE MANIPULATION BUTTONS ALSO RECIEVE STYLING ON TEXT COLOR AND BACKGROUND-COLOR TRANSITIONS FROM THE "general-button-format" CLASS IN THE "global_styles.css" file.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*/
/* ----- GENERAL FILE MANIPULATION BUTTON RULES -----------------------------------------------------------------------------------------------------------------------------------------------*/
.general-file-manipulation-button-format{
  /*
  This is a very important class as it styles all buttons that upload files, download files, link to HTML 5 games, and add students/classes.
  NOTE: THIS IS NOT NECESSARILY USEd ONLY FOR <button></button> ELEMENTS. INFACT, IT IS USED WITH <label></label>, <a></a> AND <button></button> HTML ELEMENTS
  DEPENDING ON WHAT ACTION SHOULD BE TAKING PLACE.
  - UPLOADING FILE: Uses <label><input type = "file"></label> element to upload files on a local computer.
  - DOWNLOADING A FILE: Uses an <a></a> element to download remote files to a local computer.
  - "PLAY!" HTML 5 GAME BUTTON: Uses a <button></button> element to link to a seperate HTML page containing a student's HTML 5 game.
  */
  display: inline-block;
  font-size: 10px;
  padding: 6px;
  box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.15);
}

.general-file-manipulation-button-format img{
  /*Any image icons such as: upload and download icons that are used within a button should be centered within that button.*/
  width: 17px;
  vertical-align: middle;
}
/* ----- RULES SPECIFIC TO FILE UPLOAD AND DOWNLOAD BUTTONS -----------------------------------------------------------------------------------------------------------------------------------*/
.file-upload{
  /*Space any file upload button 10 pixels from the HTML element above it.*/
  margin-top: 10px;
}

.file-download{
  /*
  In order to position the file download button in the far right middle of each "Student Project" box position relative to the parent "li.folder-item" HTML element.
  1. Move down halfway in the box.
  2. Then move right by 72% of the project boxes width.
  3. Finally center the buttons ORIGIN to the center of the button like this:
  ----------------------------------------------------------------
  |                                                              |
  |                                                              |
  |       CENTERED ORIGIN -->   **                               |
  |                             **                               |
  |                                                              |
  |                                                              |
  ----------------------------------------------------------------
  */
  position: absolute;
  top: 50%;
  left: 72%;
  transform: translate(0%, -50%);
}

li.image-favicon-item{
  position: relative;
}

.overlay{
  position: absolute;
  width: 100%;
  height: 98%;
  z-index: 10;
  transition: background-color 100ms linear;
}

.overlay:hover{
  background-color: rgb(0, 0, 0, 0.25);
}
